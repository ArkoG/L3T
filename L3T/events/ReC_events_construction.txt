#####################################################
# [ReC][Reliques et Cathédrales]  par Arko et Mouchi#
#####################################################

namespace = REC

# Give builder trait succession
# ROOT is the character, FROM is the title, FROMFROM is the old holder
character_event = {
    id = REC.1
	hide_window = yes

	is_triggered_only = yes		
	
	trigger = {
		FROM = {
			# FROM cannot be a capital_holding, it is a province title or a non capital holding
			tier = count
			location = {
				has_province_modifier = chantier_cathedrale
			}
		}
	}
	
	immediate = {
		ROOT = { add_trait = batisseur_cathedrale }
		FROMFROM = { character_event = { id = REC.2 days = 10} }
	}
}

# Remove builder trait succession
character_event = {
    id = REC.2
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		NOT = {
			any_demesne_province = {
				has_province_modifier = chantier_cathedrale
			}
		}
	}
	
	immediate = {
		remove_trait = batisseur_cathedrale
	}
}

# Construction base progression [character]
character_event = {
    id = REC.3
	
	hide_window = yes

	is_triggered_only = yes		
	
	trigger = {
		trait = batisseur_cathedrale
		any_demesne_province = {
			has_province_modifier = chantier_cathedrale
			capital_holding = {
				is_occupied = no
				has_siege = no
				had_title_flag = { # The first rising will arrive more than 1 year after construction starting
					flag = cathedral_construction
					years = 1
				}
			}
		}
	}
	
	immediate = {
		# TODO : Manage the case it can be have several ones
		random_demesne_province = {
			limit = {
				has_province_modifier = chantier_cathedrale
				capital_holding = {
					had_title_flag = { # The first rising will arrive more than 1 year after construction starting
						flag = cathedral_construction
						years = 1
					}
				}
			}
			clr_province_flag = cathedral_siege_event
			province_event = { id = REC.4 days = 30}
		}
		character_event = { id = REC.5 days = 10}
	}
}

# Construction base progression [province]
province_event = {
    id = REC.4
	desc = "DESCREC.4"
	picture = GFX_evt_REC5

	is_triggered_only = yes	
	
	trigger = {
		owner = {
			OR = {
				any_courtier = { has_minor_title = title_batisseur }
				any_vassal = { has_minor_title = title_batisseur }
			}
		}
	}
	
	# Pay correctly
	option = {
		name = "REC.4A"
		trigger = { FROM = { wealth = 100 } }
		ai_chance = {
			factor = 70
			modifier = {
				factor = 2
				FROM = { trait = zealous }
			}
			modifier = {
				factor = 2
				FROM = { trait = charitable }
			}
		}
		FROM = { wealth = -100 }
		capital_holding = {
			if = {
				limit = { 
					NOT = {
						location = {
							OR = { 
								has_province_modifier = chantier_stop 
								has_province_modifier = chantier_down
							}
						}
					}
				}
				hidden_tooltip = { change_variable = { which = cathedral value = 100 } }
			}
			if = {
				limit = { location = { has_province_modifier = chantier_down } }
				hidden_tooltip = { change_variable = { which = cathedral value = 90 } }
				location = { remove_province_modifier = chantier_down }
			}
			if = {
				limit = { location = { has_province_modifier = chantier_stop } }
				hidden_tooltip = { change_variable = { which = cathedral value = 80 } }
				location = { remove_province_modifier = chantier_stop }
			}
		}
		province_event = { id = REC.201 days = 10}
		province_event = { id = REC.202 days = 10}
		province_event = { id = REC.203 days = 10}
		province_event = { id = REC.204 days = 10}
		province_event = { id = REC.205 days = 10}
		province_event = { id = REC.206 days = 10}
		province_event = { id = REC.207 days = 10}
		province_event = { id = REC.208 days = 10}
		province_event = { id = REC.209 days = 10}
		province_event = { id = REC.1210 days = 10}
		province_event = { id = REC.2210 days = 10}
		province_event = { id = REC.3210 days = 10}
		province_event = { id = REC.211 days = 10}
		province_event = { id = REC.212 days = 10}
	}

	# Do some economy
	option = {
		name = "REC.4B"
		trigger = { FROM = { wealth = 75 } }
		ai_chance = {
			factor = 20
			modifier = {
				factor = 5
				FROM = { NOT = { wealth = 100 } }
			}
			modifier = {
				factor = 3
				FROM = { trait = greedy }
			}
		}
		FROM = { wealth = -75 }
		capital_holding = {
			if = {
				limit = {
					NOT = {
						location = {
							OR = { 
								has_province_modifier = chantier_stop 
								has_province_modifier = chantier_down
							}
						}
					}
				}
				hidden_tooltip = {
					random_list = {
						20 = { change_variable = { which = cathedral value = 85 } }
						60 = { change_variable = { which = cathedral value = 75 } }
						20 = { change_variable = { which = cathedral value = 65 } }
					}
				}
			}
			if = {
				limit = { location = { has_province_modifier = chantier_down } }
				hidden_tooltip = {
					random_list = {
						20 = { change_variable = { which = cathedral value = 80 } }
						60 = { change_variable = { which = cathedral value = 70 } }
						20 = { change_variable = { which = cathedral value = 60 } }
					}
				}
			}
			if = {
				limit = { location = { has_province_modifier = chantier_stop } }
				hidden_tooltip = {
					random_list = {
						20 = { change_variable = { which = cathedral value = 70 } }
						60 = { change_variable = { which = cathedral value = 60 } }
						20 = { change_variable = { which = cathedral value = 50 } }
					}
				}
				location = { remove_province_modifier = chantier_stop }
			}
		}			
		add_province_modifier = {
			name = chantier_down
			duration = -1
		}
		province_event = { id = REC.201 days = 10}
		province_event = { id = REC.202 days = 10}
		province_event = { id = REC.203 days = 10}
		province_event = { id = REC.204 days = 10}
		province_event = { id = REC.205 days = 10}
		province_event = { id = REC.206 days = 10}
		province_event = { id = REC.207 days = 10}
		province_event = { id = REC.208 days = 10}
		province_event = { id = REC.209 days = 10}
		province_event = { id = REC.1210 days = 10}
		province_event = { id = REC.2210 days = 10}
		province_event = { id = REC.3210 days = 10}
		province_event = { id = REC.211 days = 10}
		province_event = { id = REC.212 days = 10}
	}
	
	# Stop financing
	option = {
		name = "REC.4C"
		ai_chance = {
			factor = 10
		}
		# TODO add flavour as consequences of that
		add_province_modifier = {
			name = chantier_stop
			duration = -1
		}
	}
}

# Recruit a Builder Master
character_event = {
    id = REC.5
	picture = GFX_evt_emissary
	
	desc = {
		trigger = { NOT = { has_character_flag = recrutement_repousse } }
		text = "DESCREC.5"
	}
	desc = {
		trigger = { has_character_flag = recrutement_repousse }
		text = "DESCREC.5bis"
	}
	
	is_triggered_only = yes

	trigger = {
		NOT = { any_courtier = { has_minor_title = title_batisseur } }
		NOT = { any_vassal = { has_minor_title = title_batisseur } }
	}

	option = {
		name = "REC.5A" #je le choisirai
		trigger = { NOT = { has_character_flag = recutement_suggestion } }
		ai_chance = { factor = 0 }
		if = {
			limit = { NOT = { has_character_flag = recrutement_repousse } }
			set_character_flag = recrutement_repousse
		}
		if = {
			limit = { has_character_flag = recrutement_repousse }
			random_demesne_province = {
				limit = {
					has_province_modifier = chantier_cathedrale
				}	
				province_event = { id = REC.6 days = 40 }
			}
		}
	}

	option = {
		name = "REC.5B"	#trouvez moi quelqu'un, n'importe qui.
		
		trigger = { 
			OR = {
				#trait = lunatic #irrationel
				#trait = slow #débile
				#trait = imbecile #débile
				#trait = slothful #grosse fainéasse
				NOT = { stewardship = 8 }
				NOT = { diplomacy = 8 }
				NOT = { learning = 8 }				
			}
		} 
		
		ai_chance = { factor = 100 }
			
		custom_tooltip = { text = recrutement_profil_sans }
		hidden_tooltip = {
			random_list = { #un gars correct, sans plus, mais gratos
				33 = {
					create_character = {
						random_traits = yes
						##dynasty = random
						female = no
						attributes = {
							stewardship = 8 
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				33 = {
					create_character = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							diplomacy = 8
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				33 = {
					create_character = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							learning = 8
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
			}
		}
	}
	
	option = {
		name = "REC.5C"	#trouvez moi quelqu'un, dominante gestion
		
		trigger = { stewardship = 8 }

		ai_chance = { factor = 100 }
		
		scaled_wealth = -0.2
		
		custom_tooltip = { text = recrutement_profil_intendance }
		hidden_tooltip = {
			random_list = { 
				50 = {
					create_random_steward = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							stewardship = 14
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				20 = {
					create_random_steward = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							stewardship = 10 						
							diplomacy = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				20 = {
					create_random_steward = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							stewardship = 10 						
							learning = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				 5 = {
					create_random_steward = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							diplomacy = 10 #pas exactement le spécialiste attendu. la compétence voulue est la secondaire						
							stewardship = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				 5 = {
					create_random_steward = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							learning = 10 #pas exactement le spécialiste attendu. la compétence voulue est la secondaire					
							stewardship = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
			}
		}
	}
	
	option = {
		name = "REC.5D"	#trouvez moi quelqu'un, dominante diplo
		
		trigger = { diplomacy = 8 }
		
		ai_chance = { factor = 100 }

		scaled_wealth = -0.2
		
		custom_tooltip = { text = recrutement_profil_diplomatie }
		hidden_tooltip = {			
			random_list = { 
				50 = {
					create_random_diplomat = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							diplomacy = 14
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				20 = {
					create_random_diplomat = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							diplomacy = 10 						
							stewardship = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				20 = {
					create_random_diplomat = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							diplomacy = 10 						
							learning = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				 5 = {
					create_random_diplomat = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							stewardship = 10 #pas exactement le spécialiste attendu. la compétence voulue est la secondaire						
							diplomacy = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				 5 = {
					create_random_diplomat = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							learning = 10 #pas exactement le spécialiste attendu. la compétence voulue est la secondaire					
							diplomacy = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
			}
		}
	}
	
	option = {
		name = "REC.5E"	#trouvez moi quelqu'un, dominante érudtion
		
		trigger = { learning = 8 }
		
		ai_chance = { factor = 100 }

		scaled_wealth = -0.2
		
		custom_tooltip = { text = recrutement_profil_erudition }
		hidden_tooltip = {			
			random_list = { 
				50 = {
					create_random_priest = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							learning = 14
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				20 = {
					create_random_priest = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							learning = 10 						
							stewardship = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				20 = {
					create_random_priest = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							learning = 10 						
							diplomacy = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				5 = {
					create_random_priest = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							stewardship = 10 #pas exactement le spécialiste attendu. la compétence voulue est la secondaire						
							learning = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
				5 = {
					create_random_priest = {
						random_traits = yes
						#dynasty = random
						female = no
						attributes = {
							diplomacy = 10 #pas exactement le spécialiste attendu. la compétence voulue est la secondaire					
							learning = 6
						}
					}
					new_character = { give_minor_title = title_batisseur }
				}
			}
		}
	}
}

# Construction stopped because not leaded
province_event = {
    id = REC.6
	desc = "DESCREC.6"
	picture = GFX_evt_REC5
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = { any_courtier = { has_minor_title = title_batisseur } }
			NOT = { any_vassal = { has_minor_title = title_batisseur } }
		}
	}
	
	option = {
		name = "REC.6A"
		add_province_modifier = {
			name = chantier_stop
			duration = -1
		}
	}
	
	option = {
		name = "REC.6B"
		owner = {
			set_character_flag = recutement_suggestion
			character_event = { id = REC.5  days = 10 }
		}
	}
}

# Get construction progression [province]
province_event = {
    id = REC.7
	hide_window = yes
	
	is_triggered_only = yes
	immediate = { FROMFROM = { letter_event = { id = REC.8 days = 0 } } }
}

# Get construction progression [ruler]
letter_event = {
	id = REC.8
	desc = "DESCREC.8"
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			capital_holding = {
				if = {
					limit = { is_building_cathedral_step_1 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 100 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_2 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 600 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_3 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 2600 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_4 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 3100 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_5 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 5600 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_6 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 6800 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_7 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 8300 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_8 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 9800 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_9 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 10300 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { 
						OR = {
							is_building_cathedral_step_10_ca = yes
							is_building_cathedral_step_10_ct = yes
							is_building_cathedral_step_10_tp = yes
						}
					}
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 10800 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_11 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 11300 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
				if = {
					limit = { is_building_cathedral_step_12 = yes }
					# requiredStepPoint = total required point for this step
					set_variable = { which = requiredStepPoint value = 12000 }
					# cathedralYear1 = year remaining to build the step with 100 point by year = int((requiredStepPoint - cathedral) / 100)
					set_variable = { which = ratio which = requiredStepPoint }
					subtract_variable = { which = ratio which = cathedral }
					divide_variable = { which = ratio value = 100 } # ratio = (requiredStepPoint - cathedral) / 100
					set_variable = { which = cathedralYear1 value = 0}
					while = {
						limit = {
							check_variable = { which = ratio value = 1 }
						}
						change_variable = { which = cathedralYear1 value = 1 }
						subtract_variable = { which = ratio value = 1 }
					}
					# cathedralYear2 = cathedralYear1 + 1
					set_variable = { which = cathedralYear2 which = cathedralYear1 }
					change_variable = { which = cathedralYear2 value = 1 }
				}
			}
		}
	}
	
	option = {
		name = "REC.8A"
	}
}

# Get construction progression [master builder]
character_event = {
    id = REC.9
	hide_window = yes
	
	is_triggered_only = yes
	immediate = {
		FROMFROM = {
			random_demesne_province = {
				limit = { has_province_modifier = chantier_cathedrale }
				province_event = { id = REC.10  days = 1 }
			}
		}
	}
}

# Get construction progression [province 2]
province_event = {
    id = REC.10
	hide_window = yes
	
	is_triggered_only = yes
	immediate = { FROMFROMFROM = { letter_event = { id = REC.8 days = 0 } } }
}
