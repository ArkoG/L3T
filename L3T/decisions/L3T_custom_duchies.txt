decisions = {

	form_new_duchy = {

		is_high_prio = yes
		ai_check_interval = 24
		
		potential = {
			is_playable = yes
			is_feudal = yes
			is_adult = yes
			tier = COUNT
			NOT = { tier = DUKE }
			#holy_order = no
			
			NOT = { has_global_flag = running_LCDA }  #needs a different localisation
			
			NOT = {
				has_game_rule = {
					name = dynamic_realms
					value = off
				}
			}

			NOT = { has_character_flag = created_dynamic_title }
			demesne_size = 2

		}

		allow = {
			is_incapable = no
			prisoner = no
			has_regent = no
			is_primary_war_defender = no
			in_revolt = no
			
			custom_tooltip = { 
				text = new_duchy_req_tooltip_package
				capital_scope = {
				#primary_title = {
					#location = {
						any_neighbor_province = {
							owner = { character = ROOT }
						}
					#}
				}
			}
			
			AND = {
				demesne_size = 3
				realm_size = 9
				custom_tooltip = { 
					text = new_duchy_req_tooltip_demesne 
					any_demesne_title = {
						count = 2 #at least 2
						tier = COUNT
					}
					NOT = {
						any_demesne_title = {
							count = 6 #less than 6, so 5 #to limit the exploit to hoard counties before taking the decision, and so value creating an mega DJ duchy 
							tier = COUNT
						}
					}
				}
			}
			wealth = 250
			
			conditional_tooltip = {
				trigger = { independent = yes }
				custom_tooltip = { text = new_duchy_req_tooltip_yind }
				hidden_tooltip = {
					OR = {
						AND = {
							independent = yes
							prestige = 250
							piety = 150
						}
						AND = {
							independent = no
							prestige = 500
							piety = 300
						}
					}
				}
			}
			conditional_tooltip = {
				trigger = { independent = no }
				custom_tooltip = { text = new_duchy_req_tooltip_nind }
				hidden_tooltip = {
					OR = {
						AND = {
							independent = yes
							prestige = 250
							piety = 150
						}
						AND = {
							independent = no
							prestige = 500
							piety = 300
						}
					}
				}
			}
		}
		
		effect = {
			set_character_flag = created_dynamic_title
			capital_scope = {
				set_flag = my_kapital
				any_neighbor_province = {
					limit = { 
						owner = { character = ROOT  }
						#NOT = { has_flag = my_kapital }
						#any_neighbor_province = { has_flag = my_kapital }
						#NOT = { has_flag = my_kapital_connected }
						NOT = { has_flag = my_kapital_connected_R1 }
						#NOT = { has_flag = my_kapital_connected_R2 }
					}
					#set_flag = my_kapital_connected
					set_flag = my_kapital_connected_R1
					any_neighbor_province = {
						limit = { 
							owner = { character = ROOT  }
							NOT = { has_flag = my_kapital }
							#any_neighbor_province = { any_neighbor_province = { has_flag = my_kapital }}
							#any_neighbor_province = { has_flag = my_kapital_connected_R1}
							#NOT = { has_flag = my_kapital_connected }
							NOT = { has_flag = my_kapital_connected_R1 }
							NOT = { has_flag = my_kapital_connected_R2 }
						}
						#set_flag = my_kapital_connected
						set_flag = my_kapital_connected_R2
					}
				}
			}
			wealth = -250
			#hidden_tooltip = {
				primary_title = {
					#save_event_target_as = old_primary_title
					create_title = {
						tier = DUKE
						landless = no
						temporary = no
						custom_created = yes
						culture = ROOT
						holder = ROOT
						base_title = THIS
						copy_title_laws = yes
					}
					new_title = {
						save_event_target_as = new_primary_title
						set_flag = my_created_title
					}
					hidden_tooltip = {
						kingdom = {
							ROOT = {
								primary_title = {
									de_jure_liege = PREVPREV
								}
							}
						}
					}
				}
				any_demesne_title = {
					limit = { 
						tier = COUNT
						location = { has_flag = my_kapital }
					}
					de_jure_liege = PREV
					####has_de_jure_pretension ####
					location = { province_event = { id = L3T.80 }}
					event_target:new_primary_title = { set_variable = { which = created_DJ_size value = 1 }}
				}
				any_demesne_title = {
					limit = {
						event_target:new_primary_title = { NOT = { check_variable = { which = created_DJ_size value = 5 }}}
						tier = COUNT
						#NOT = { has_title_flag = integrated_yet }
						location = {
							NOT = { has_flag = my_kapital }
							has_flag = my_kapital_connected_R1
							NOT = { has_flag = my_kapital_connected_R2 }
						}
					}
					de_jure_liege = PREV
					location = { province_event = { id = L3T.81 }}
					#set_title_flag = integrated_yet
					event_target:new_primary_title = { change_variable = { which = created_DJ_size value = 1 }}
				}
				any_demesne_title = {
					limit = {
						event_target:new_primary_title = { NOT = { check_variable = { which = created_DJ_size value = 5 }}}
						tier = COUNT
						#NOT = { has_title_flag = integrated_yet }
						location = {
							NOT = { has_flag = my_kapital }
							NOT = { has_flag = my_kapital_connected_R1 }
							has_flag = my_kapital_connected_R2
						}
					}
					de_jure_liege = PREV
					location = { province_event = { id = L3T.82 }}
					#set_title_flag = integrated_yet
					event_target:new_primary_title = { change_variable = { which = created_DJ_size value = 1 }}
				}

				#if didn't hit yet the 5 prov max, check if other provinces are eligible
				#capital+at least one adjacent+at least one indirect adjacent make 2 prov DJ
				#so try to find 3 additional eligible provinces
				random_demesne_title = { #1
					limit = {
						event_target:new_primary_title = { NOT = { check_variable = { which = created_DJ_size value = 3 }}}
						location = {
							is_connected_to = {
								sub_realm = yes #Which realm to allow pathing through. "yes" for the sub-realm of the province owner. "no" for the realm of the top-liege.
								target = capital
								#land_gap = no #can't take "no"
								#naval_distance = no
							}
						NOT = { has_flag = my_kapital_connected_R1 }
						NOT = { has_flag = my_kapital_connected_R2 }						
						NOT = { de_jure_liege = ROOT }
						}
					}
					de_jure_liege = PREV
					location = { province_event = { id = L3T.83 }}
					event_target:new_primary_title = { change_variable = { which = created_DJ_size value = 1 }}
				}
				random_demesne_title = { #2
					limit = {
						event_target:new_primary_title = { NOT = { check_variable = { which = created_DJ_size value = 3 }}}
						location = {
							is_connected_to = {
								sub_realm = yes #Which realm to allow pathing through. "yes" for the sub-realm of the province owner. "no" for the realm of the top-liege.
								target = capital
								#land_gap = no
								#naval_distance = no
							}
						NOT = { has_flag = my_kapital_connected_R1 }
						NOT = { has_flag = my_kapital_connected_R2 }	
						NOT = { de_jure_liege = ROOT }
						}
					}
					de_jure_liege = PREV
					location = { province_event = { id = L3T.83 }}
					event_target:new_primary_title = { change_variable = { which = created_DJ_size value = 1 }}
				}
				random_demesne_title = { #3
					limit = {
						event_target:new_primary_title = { NOT = { check_variable = { which = created_DJ_size value = 3 }}}
						location = {
							is_connected_to = {
								sub_realm = yes #Which realm to allow pathing through. "yes" for the sub-realm of the province owner. "no" for the realm of the top-liege.
								target = capital
								#land_gap = no
								#naval_distance = no
							}
						NOT = { has_flag = my_kapital_connected_R1 }
						NOT = { has_flag = my_kapital_connected_R2 }	
						NOT = { de_jure_liege = ROOT }
						}
					}
					de_jure_liege = PREV
					location = { province_event = { id = L3T.83 }}
					event_target:new_primary_title = { change_variable = { which = created_DJ_size value = 1 }}
				}
				#remove flags
				capital_scope = {
					clr_flag = my_kapital
					any_neighbor_province = {
						limit = { 
							owner = { character = ROOT  }
							has_flag = my_kapital_connected_R1
						}
						clr_flag = my_kapital_connected_R1
					}
					any_neighbor_province = { 
						any_neighbor_province = {
							limit = { 
								owner = { character = ROOT  }
								has_flag = my_kapital_connected_R2
							}
							clr_flag = my_kapital_connected_R2
						}
					}
				}				
					
			#}
			custom_tooltip = { text = form_new_duchy_tooltip }
			chronicle = {
				entry = CHRONICLE_FOUNDED_NEW_DUCHY
				portrait = [Root.GetID]
			}
			###needs a notification event maybe ? #yes need a notification for holder and liege and top liege
			#notify character
			#notify form duke liege (opinion)
			#notify king liege
			#notify emperor
			#notify top liege with agreement or not (opinion/claim)
			#make better chronicle entry + picture
			#expand DJ
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.1
				OR = {
					NOT = { trait = ambitious }
					piety = 750
					prestige = 750
					wealth = 300
				}
			}
			modifier = {
				factor = 0.1 #AI's not dumb
				NOT = { 
					any_demesne_title = {
						count = 2
						tier = COUNT
					}
				}
			}
			modifier = {
				factor = 0.5 #AI's not so dumb
				NOT = { 
					any_demesne_title = {
						count = 3
						tier = COUNT
					}
				}
			}
			modifier = {
				factor = 1.2 #AI's almost right
				NOT = { 
					any_demesne_title = {
						count = 4
						tier = COUNT
					}
				}
			}
			modifier = {
				factor = 3.0  #clever AI
				any_demesne_title = {
					count = 5
					tier = COUNT
				}
			}
		}
	}
}
title_decisions = {
	adjoin_province_to_new_duchy = {
		only_playable = yes
		filter = sub_realm_owned
		ai_target_filter = sub_realm_owned
		ai_check_interval = 36
		diplomacy_icon = GFX_diplo_dejure_icon
		
		from_potential = { #title owner
			is_feudal=yes
			tier = DUKE
			#has_character_flag = created_dynamic_title
			#primary_title = { 
			#	has_flag = my_created_title
			#	custom_created = yes
			#	NOT = { check_variable = { which = created_DJ_size value = 5 }}

			#}
		}
		
		potential = { #the targeted title
			owner = { character = FROM }
			tier = COUNT
		}
		
		allow = {
			location = {
				#owner = {
				#	same_realm = FROM
				#}
				is_connected_to = {
					sub_realm = yes #Which realm to allow pathing through. "yes" for the sub-realm of the province owner. "no" for the realm of the top-liege.
					target = capital
					#land_gap = no
					#naval_distance = no
				}
			#NOT = { has_flag = my_kapital_connected_R1 }
			#NOT = { has_flag = my_kapital_connected_R2 }	
			NOT = { de_jure_liege = FROM }
			}
			FROM = { 
				is_incapable = no
				prisoner = no
				has_regent = no
				is_primary_war_defender = no
				in_revolt = no
			}
			is_occupied = no
			#controlled_by = FROM
	
			FROM = { wealth = 150 }
		}
			
		effect = {}
		
		revoke_allowed = { always = no }
		
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.5
				OR = {
					FROM = {
						NOT = { trait = ambitious }
						wealth = 200
					}
				}
			}
		}	
	}
}